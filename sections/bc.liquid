{%- comment -%}
/sections/box-fitter.liquid
A 4-step “box builder” wizard: Packaging → Gifts → Card → Done.
Uses Alpine.js for state & UI.
{%- endcomment -%}

<div 
  x-data="boxFitter()"
  class="box-fitter max-w-5xl mx-auto p-6"
>

  {#–– Top “features” row ––#}
<div class="features flex justify-between mb-8">
  {% for i in (1..4) %}
    {% assign iconKey  = 'icon'  | append: i %}
    {% assign labelKey = 'icon'  | append: i  | append: '_label' %}
    <div class="feature text-center flex-1">
      {% if section.settings[iconKey] %}
        <img src="{{ section.settings[iconKey] | img_url: '100x100' }}" 
             alt="" 
             class="mx-auto mb-2" />
      {% endif %}
      <p class="text-sm font-medium">
        {{ section.settings[labelKey] }}
      </p>
    </div>
  {% endfor %}
</div>

  {#–– Progress bar ––#}
  <div class="progress-bar mb-6">
    <ul class="flex justify-between">
      <template x-for="(step, idx) in steps" :key="idx">
        <li class="flex-1 text-center relative">
          <div 
            class="w-8 h-8 rounded-full mx-auto leading-8"
            :class="{'bg-blue-600 text-white': currentStep>idx, 'border-2': currentStep<=idx}"
          x-text="idx+1"></div>
          <p class="mt-2 text-xs" x-text="step"></p>
          <!-- connector line -->
          <div 
            class="absolute top-4 left-1/2 w-full h-0.5 bg-gray-300"
            :class="{'bg-blue-600': currentStep>idx+1}"
            style="transform: translateX(50%); z-index:-1;">
          </div>
        </li>
      </template>
    </ul>
  </div>

  {#–– Step contents ––#}
  <div class="steps-content">

    {!-- STEP 1 –– Packaging --}
    <div x-show="currentStep===1" class="step1">
      <div class="grid grid-cols-4 gap-4 mb-4">
        <template x-for="prod in step1Products" :key="prod.id">
          <div 
            class="product-card border p-4 cursor-pointer"
            :class="{'border-blue-600': isSelected(prod.id,1)}"
            @click="toggleSelect(prod,1)"
          >
            <img :src="prod.featured_image" class="mb-2" />
            <h4 class="text-sm" x-text="prod.title"></h4>
            <p class="text-xs" x-text="formatMoney(prod.variants[0].price)"></p>
          </div>
        </template>
      </div>
      <button 
        class="btn px-6 py-2 bg-blue-600 text-white"
        :disabled="selectedCount(1)===0"
        @click="nextStep()"
      >Next</button>
    </div>

    {!-- STEP 2 –– Gifts --}
    <div x-show="currentStep===2" class="step2">
      <div class="grid grid-cols-4 gap-4 mb-4">
        <template x-for="prod in step2Products" :key="prod.id">
          <div 
            class="product-card border p-4 cursor-pointer"
            :class="{'border-blue-600': isSelected(prod.id,2)}"
            @click="toggleSelect(prod,2)"
          >
            <img :src="prod.featured_image" class="mb-2" />
            <h4 class="text-sm" x-text="prod.title"></h4>
            <p class="text-xs" x-text="formatMoney(prod.variants[0].price)"></p>
          </div>
        </template>
      </div>
      <button class="btn px-6 py-2 bg-gray-300 mr-2" @click="prevStep()">Back</button>
      <button 
        class="btn px-6 py-2 bg-blue-600 text-white"
        :disabled="selectedCount(2)===0"
        @click="nextStep()"
      >Next</button>
    </div>

    {!-- STEP 3 –– Card --}
    <div x-show="currentStep===3" class="step3">
      <div class="grid grid-cols-4 gap-4 mb-4">
        <template x-for="prod in step3Products" :key="prod.id">
          <div 
            class="product-card border p-4 cursor-pointer"
            :class="{'border-blue-600': isSelected(prod.id,3)}"
            @click="toggleSelect(prod,3)"
          >
            <img :src="prod.featured_image" class="mb-2" />
            <h4 class="text-sm" x-text="prod.title"></h4>
            <p class="text-xs" x-text="formatMoney(prod.variants[0].price)"></p>
          </div>
        </template>
      </div>
      <button class="btn px-6 py-2 bg-gray-300 mr-2" @click="prevStep()">Back</button>
      <button 
        class="btn px-6 py-2 bg-blue-600 text-white"
        :disabled="selectedCount(3)===0"
        @click="nextStep()"
      >Next</button>
    </div>

    {!-- STEP 4 –– Done / Summary --}
    <div x-show="currentStep===4" class="step4 flex">
      <div class="w-2/3 pr-6">
        <h3 class="mb-4">Your Selection</h3>
        <template x-for="prod in allSelected" :key="prod.id">
          <div class="flex items-center mb-3">
            <img :src="prod.featured_image" class="w-16 h-16 mr-4" />
            <div>
              <h4 x-text="prod.title"></h4>
              <p class="text-xs" x-text="formatMoney(prod.variants[0].price)"></p>
            </div>
          </div>
        </template>
      </div>
      <div class="w-1/3">
        <h3 class="mb-2">Total</h3>
        <p class="text-xl mb-4" x-text="formatMoney(totalPrice)"></p>
        <button 
          class="btn px-6 py-2 bg-green-600 text-white"
          @click="checkout()"
        >Checkout</button>
      </div>
    </div>

  </div><!-- /.steps-content -->

</div><!-- /.box-fitter -->

{%- comment -%}
  Include Alpine.js (you can move this into your theme.liquid head)
{%- endcomment -%}
<script src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js" defer></script>

<script>
  function boxFitter(){
    return {
      currentStep: 1,
      steps: ['Packaging','Gifts','Card','Done'],
      // grab products from the collections set in the schema
      step1Products: {{ collections[section.settings.step1_collection].products | json }},
      step2Products: {{ collections[section.settings.step2_collection].products | json }},
      step3Products: {{ collections[section.settings.step3_collection].products | json }},
      // track selected items per step
      selected: {1: [], 2: [], 3: []},
      // single/multi modes from schema
      mode: {
        1: '{{ section.settings.step1_mode }}',
        2: '{{ section.settings.step2_mode }}',
        3: '{{ section.settings.step3_mode }}'
      },
      toggleSelect(prod, step){
        let arr = this.selected[step];
        let idx = arr.findIndex(p=>p.id===prod.id);
        if(idx>=0){
          arr.splice(idx,1);
        } else {
          if(this.mode[step]==='single') arr.splice(0);
          arr.push(prod);
        }
      },
      isSelected(id,step){
        return this.selected[step].some(p=>p.id===id);
      },
      selectedCount(step){
        return this.selected[step].length;
      },
      nextStep(){
        if(this.currentStep<4) this.currentStep++;
      },
      prevStep(){
        if(this.currentStep>1) this.currentStep--;
      },
      get allSelected(){
        return [...this.selected[1],...this.selected[2],...this.selected[3]];
      },
      get totalPrice(){
        return this.allSelected.reduce((sum,p)=>sum + (p.variants[0].price),0);
      },
      formatMoney(cents){
        return new Intl.NumberFormat('{{ shop.locale }}', {
          style: 'currency',
          currency: '{{ shop.currency }}'
        }).format(cents/100);
      },
      checkout(){
        // build a cart permalink: variantId:quantity,variant2:qty2...
        let param = this.allSelected
          .map(p=> p.variants[0].id + ':' + 1)
          .join(',');
        window.location.href = `/cart/${param}?checkout`;
      }
    }
  }
</script>

{% schema %}
{
  "name": "Box Fitter",
  "settings": [
    { "type": "image_picker", "id": "icon1",       "label": "Icon 1" },
    { "type": "text",         "id": "icon1_label", "label": "Icon 1 Label", "default": "Fast Shipping" },
    { "type": "image_picker", "id": "icon2",       "label": "Icon 2" },
    { "type": "text",         "id": "icon2_label", "label": "Icon 2 Label", "default": "Premium Wrap" },
    { "type": "image_picker", "id": "icon3",       "label": "Icon 3" },
    { "type": "text",         "id": "icon3_label", "label": "Icon 3 Label", "default": "Handpicked Gifts" },
    { "type": "image_picker", "id": "icon4",       "label": "Icon 4" },
    { "type": "text",         "id": "icon4_label", "label": "Icon 4 Label", "default": "Personal Card" },

    { "type": "collection", "id": "step1_collection", "label": "Step 1 Collection" },
    { "type": "select",     "id": "step1_mode",       "label": "Step 1: Single or Multiple?",
      "options": [
        { "value": "single",   "label": "Single" },
        { "value": "multiple", "label": "Multiple" }
      ], "default": "single"
    },

    { "type": "collection", "id": "step2_collection", "label": "Step 2 Collection" },
    { "type": "select",     "id": "step2_mode",       "label": "Step 2: Single or Multiple?",
      "options": [
        { "value": "single",   "label": "Single" },
        { "value": "multiple", "label": "Multiple" }
      ], "default": "multiple"
    },

    { "type": "collection", "id": "step3_collection", "label": "Step 3 Collection" },
    { "type": "select",     "id": "step3_mode",       "label": "Step 3: Single or Multiple?",
      "options": [
        { "value": "single",   "label": "Single" },
        { "value": "multiple", "label": "Multiple" }
      ], "default": "single"
    }
  ],
  "presets": [
    { "name": "Box Fitter", "category": "Custom" }
  ]
}
{% endschema %}
