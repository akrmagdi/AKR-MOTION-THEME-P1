{% comment %}
  Custom Gift Flow – Shopify Liquid 2.0 Section
  File: sections/custom-gift-box-flow.liquid
  Adjustments:
    • Fixed Liquid syntax by replacing inline ternary with if/elsif for collection assignment
    • Made product cards smaller (h-32 images, smaller padding)
    • Added placeholder to summary thumbs when empty
    • Ensured progress bar container has explicit height
    • Refined Add/Next/Back functionality
{% endcomment %}

<!-- Include necessary libs (preferably in layout) -->
<script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4"></script>
<link href="https://cdn.jsdelivr.net/npm/daisyui@3/dist/full.css" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/js/all.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/progressbar.js"></script>

<section class="gift-flow max-w-7xl mx-auto p-8" data-id="gift-flow">
  <!-- Sticky Summary -->
  <div id="summary-bar" class="sticky top-4 bg-white p-4 border rounded-md shadow mb-6 z-10">
    <h4 class="font-semibold mb-2">Your Box (<span id="summary-count">0</span> items)</h4>
    <div id="summary-thumbs" class="flex space-x-2">
      <span class="text-gray-400">No items yet</span>
    </div>
  </div>

  <!-- Top Icons -->
  <div class="grid grid-cols-4 gap-8 mb-8">
    {% assign icons = "box-open,gift,credit-card,check-circle" | split: ',' %}
    {% assign labels = "Pick Your Giftbox,Choose Your Gifts,Pick A Card,Review" | split: ',' %}
    {% for icon in icons %}
      <div class="text-center">
        <div class="mx-auto w-16 h-16 rounded-full bg-gray-100 flex items-center justify-center mb-2">
          <i class="fas fa-{{ icon }} text-2xl text-blue-600"></i>
        </div>
        <p class="text-sm font-semibold text-gray-800">{{ labels[forloop.index0] }}</p>
      </div>
    {% endfor %}
  </div>

  <!-- Progress Bar -->
  <div id="progress-container" class="mb-8" style="height:6px;"></div>

  <!-- Step Header -->
  <div class="text-center mb-6">
    <p class="text-xs uppercase text-gray-500 mb-1">Step <span id="current-step">1</span> of 3</p>
    <h2 id="current-title" class="text-3xl font-bold text-gray-900">{{ section.settings.packaging_heading }}</h2>
    <p id="current-sub" class="text-gray-600 mt-2">{{ section.settings.packaging_subheading }}</p>
  </div>

  <!-- Steps Content (pre-rendered) -->
  <div id="steps-wrapper">
    {% for idx in (1..3) %}
      {% comment %} Assign correct collection based on idx {% endcomment %}
      {% if idx == 1 %}
        {% assign col = collections[section.settings.packaging_collection] %}
      {% elsif idx == 2 %}
        {% assign col = collections[section.settings.gifts_collection] %}
      {% else %}
        {% assign col = collections[section.settings.card_collection] %}
      {% endif %}
      <div class="step-content {% unless idx == 1 %}hidden{% endunless %}" data-step="{{ idx }}">
        <div class="grid sm:grid-cols-2 lg:grid-cols-3 gap-4">
          {% for p in col.products %}
          <div class="card border rounded-lg p-2 shadow-sm" data-id="{{ p.id }}" data-title="{{ p.title }}" data-price="{{ p.price | money_without_currency }}" data-img="{{ p.featured_image | img_url:'200x' }}">
            {% if p.featured_image %}
              <img src="{{ p.featured_image | img_url:'400x' }}" alt="{{ p.title }}" class="w-full h-32 object-cover rounded-md mb-2">
            {% endif %}
            <h3 class="font-medium truncate mb-1 text-sm">{{ p.title }}</h3>
            {% if idx < 3 %}
              <p class="text-blue-600 font-semibold mb-1 text-sm">{{ p.price | money }}</p>
              <button class="select-item btn btn-xs btn-primary w-full uppercase"><i class="fas fa-plus mr-1"></i>Add</button>
            {% else %}
              <button class="select-item btn btn-xs btn-secondary w-full uppercase"><i class="fas fa-check mr-1"></i>Select Card</button>
            {% endif %}
          </div>
          {% endfor %}
        </div>
      </div>
    {% endfor %}
  </div>

  <!-- Nav Buttons -->
  <div class="flex justify-between mt-6">
    <button id="back-btn" class="btn btn-outline btn-secondary btn-sm" disabled><i class="fas fa-arrow-left mr-1"></i>{{ section.settings.back_button_label }}</button>
    <button id="next-btn" class="btn btn-primary btn-sm">{{ section.settings.next_button_label }}<i class="fas fa-arrow-right ml-1"></i></button>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded',()=>{
    const bar = new ProgressBar.Line('#progress-container',{ strokeWidth:6,duration:200,color:'#3b82f6',trailColor:'#e5e7eb' });
    const totals = 3;
    let current = 1;
    const contents = document.querySelectorAll('.step-content');
    const btnNext = document.getElementById('next-btn');
    const btnBack = document.getElementById('back-btn');
    const curStep = document.getElementById('current-step');
    const curTitle= document.getElementById('current-title');
    const curSub  = document.getElementById('current-sub');
    const sumCount= document.getElementById('summary-count');
    const sumThumbs= document.getElementById('summary-thumbs');
    let selected=[];
    const headings=[
      {{ section.settings.packaging_heading | json }},
      {{ section.settings.gifts_heading | json }},
      {{ section.settings.card_heading | json }}
    ];
    const subs=[
      {{ section.settings.packaging_subheading | json }},
      {{ section.settings.gifts_subheading | json }},
      {{ section.settings.card_subheading | json }}
    ];
    function update(){
      bar.animate((current-1)/(totals-1));
      curStep.textContent = current;
      curTitle.textContent= headings[current-1];
      curSub.textContent  = subs[current-1];
      contents.forEach((div,i)=>div.classList.toggle('hidden',i+1!==current));
      btnBack.disabled = current===1;
      btnNext.innerHTML = current<totals ? '{{ section.settings.next_button_label }} <i class="fas fa-arrow-right ml-1"></i>' : '<i class="fas fa-shopping-cart mr-1"></i>{{ section.settings.checkout_button_label }}';
      sumCount.textContent = selected.length;
      sumThumbs.innerHTML = selected.length ? selected.map(i=>`<img src="${i.img}" class="w-10 h-10 rounded" title="${i.title}">`).join('') : '<span class="text-gray-400">No items</span>';
    }
    document.body.addEventListener('click',e=>{
      if(e.target.closest('.select-item')){
        const card=e.target.closest('[data-id]');
        selected.push({id:card.dataset.id,price:card.dataset.price,title:card.dataset.title,img:card.dataset.img});
        update();
      }
      if(e.target.closest('#next-btn')){
        if(current<totals) current++; else window.location.href='/checkout'; update();
      }
      if(e.target.closest('#back-btn')){
        if(current>1) current--; update();
      }
    });
    update();
  });
</script>

{% schema %}
{
  "name":"Custom Gift Flow",
  "settings":[
    {"type":"collection","id":"packaging_collection","label":"Packaging Collection"},
    {"type":"text","id":"packaging_heading","label":"Packaging Heading","default":"Choose Your Box Color"},
    {"type":"text","id":"packaging_subheading","label":"Packaging Subheading","default":"Pick your favorite box style."},
    {"type":"collection","id":"gifts_collection","label":"Gifts Collection"},
    {"type":"text","id":"gifts_heading","label":"Gifts Heading","default":"Choose Your Gifts"},
    {"type":"text","id":"gifts_subheading","label":"Gifts Subheading","default":"Select items to fill your box."},
    {"type":"collection","id":"card_collection","label":"Card Collection"},
    {"type":"text","id":"card_heading","label":"Card Heading","default":"Select a Card"},
    {"type":"text","id":"card_subheading","label":"Card Subheading","default":"Add a personal message."},
    {"type":"text","id":"next_button_label","label":"Next Button Label","default":"Next"},
    {"type":"text","id":"back_button_label","label":"Back Button Label","default":"Back"},
    {"type":"text","id":"checkout_button_label","label":"Checkout Button Label","default":"Proceed to Checkout"}
  ],
  "presets":[{"name":"Custom Gift Flow","category":"Custom Sections"}]
}
{% endschema %}
