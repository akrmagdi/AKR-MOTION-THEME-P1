{% comment %}
Section: Box Fitter
Displays a multiphase product picker (Packaging, Gifts, Card) with a progress bar and summary step.
{% endcomment %}

<section id="box-fitter-{{ section.id }}" class="box-fitter">
  <!-- ICON GRID -->
  <div class="bf-categories grid grid-cols-4 gap-4 mb-6">
    {% for i in (1..4) %}
      {% assign icon_key = "icon_step" | append: i %}
      {% assign label_key = "text_step" | append: i %}
      {% assign icon = section.settings[icon_key] %}
      {% assign label = section.settings[label_key] %}
      <div class="bf-category-item text-center p-4 cursor-pointer" data-step="{{ i }}">
        {% if icon %}
          <img src="{{ icon | img_url: '100x' }}" alt="{{ label }} icon" class="mx-auto mb-2" />
        {% endif %}
        <p class="bf-category-label text-sm font-medium">{{ label }}</p>
      </div>
    {% endfor %}
  </div>

  <!-- PROGRESS BAR -->
  <div class="bf-progress flex items-center justify-between mb-6">
    {% for i in (1..4) %}
      {% assign label_key = "text_step" | append: i %}
      {% assign label = section.settings[label_key] %}
      <div class="bf-progress-step flex-1 relative text-center" data-step="{{ i }}">
        <div class="w-4 h-4 rounded-full mx-auto mb-1"></div>
        <p class="text-xs">{{ label }}</p>
        {% unless forloop.last %}
          <div class="bf-progress-line absolute top-1/2 right-0 w-full h-1 transform translate-x-1/2"></div>
        {% endunless %}
      </div>
    {% endfor %}
  </div>

  <!-- STEP CONTENT -->
  <div class="bf-step-content">
    {% for i in (1..3) %}
      {% assign step = i | plus: 0 %}
      <div class="bf-step{% if step == 1 %} active{% endif %}" data-step="{{ step }}">
        <div class="bf-products-grid grid grid-cols-4 gap-4">
          {% if step == 1 %}
            {% assign products = collections[section.settings.packaging_collection].products %}
          {% elsif step == 2 %}
            {% assign products = collections[section.settings.gifts_collection].products %}
          {% elsif step == 3 %}
            {% assign products = collections[section.settings.card_collection].products %}
          {% endif %}
          {% for product in products %}
            <div class="bf-product-card border p-2 text-center cursor-pointer"
                 data-product-id="{{ product.id }}"
                 data-product-title="{{ product.title }}"
                 data-product-price="{{ product.price | divided_by: 100.0 }}"
                 data-product-price-display="{{ product.price | money }}">
              <img src="{{ product.featured_image | img_url: '200x' }}" alt="{{ product.title }}" class="mx-auto mb-2" />
              <h4 class="text-sm mb-1">{{ product.title }}</h4>
              <p class="text-xs">{{ product.price | money }}</p>
            </div>
          {% endfor %}
        </div>
      </div>
    {% endfor %}

    <!-- SUMMARY STEP -->
    <div class="bf-step" data-step="4">
      <div class="bf-summary grid grid-cols-1 md:grid-cols-2 gap-4">
        <div class="bf-summary-items p-4 border">
          <!-- selected items will be injected here -->
        </div>
        <div class="bf-summary-details p-4 border text-center">
          <p class="bf-summary-total mb-4 font-medium">Total: $0.00</p>
          <button class="bf-checkout-button btn">Proceed to Checkout</button>
        </div>
      </div>
    </div>
  </div>

  <style>
    /* Basic show/hide and selected state */
    #box-fitter-{{ section.id }} .bf-step { display: none; }
    #box-fitter-{{ section.id }} .bf-step.active { display: block; }
    #box-fitter-{{ section.id }} .bf-category-item.active { opacity: 1; font-weight: bold; }
    #box-fitter-{{ section.id }} .bf-product-card.selected { border-color: #000; }
    #box-fitter-{{ section.id }} .bf-progress-step .w-4 { background: #ccc; }
    #box-fitter-{{ section.id }} .bf-progress-step.completed .w-4 { background: #4CAF50; }
    #box-fitter-{{ section.id }} .bf-progress-line { background: #ccc; }
    #box-fitter-{{ section.id }} .bf-progress-step.completed ~ .bf-progress-step .bf-progress-line { background: #4CAF50; }
  </style>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const sectionId = {{ section.id }};
      const container = document.getElementById('box-fitter-' + sectionId);
      const categoryItems = Array.from(container.querySelectorAll('.bf-category-item'));
      const progressSteps = Array.from(container.querySelectorAll('.bf-progress-step'));
      const stepBlocks = Array.from(container.querySelectorAll('.bf-step'));
      const config = {
        1: {{ section.settings.step1_multiple | json }},
        2: {{ section.settings.step2_multiple | json }},
        3: {{ section.settings.step3_multiple | json }}
      };
      let currentStep = 1;

      function updateStep() {
        categoryItems.forEach(item => item.classList.toggle('active', parseInt(item.dataset.step) === currentStep));
        stepBlocks.forEach(block => block.classList.toggle('active', parseInt(block.dataset.step) === currentStep));
        progressSteps.forEach(ps => {
          const stepNum = parseInt(ps.dataset.step);
          ps.classList.toggle('completed', stepNum <= currentStep);
        });
        if (currentStep === 4) renderSummary();
      }

      categoryItems.forEach(item => {
        item.addEventListener('click', () => {
          currentStep = parseInt(item.dataset.step);
          updateStep();
        });
      });

      container.querySelectorAll('.bf-product-card').forEach(card => {
        card.addEventListener('click', () => {
          const step = parseInt(card.closest('.bf-step').dataset.step);
          const allowMulti = config[step];
          if (!allowMulti) {
            card.parentElement.querySelectorAll('.bf-product-card').forEach(c => c.classList.remove('selected'));
          }
          card.classList.toggle('selected');
        });
      });

      function renderSummary() {
        const summaryItems = container.querySelector('.bf-summary-items');
        const summaryTotalEl = container.querySelector('.bf-summary-total');
        summaryItems.innerHTML = '';
        let total = 0;
        container.querySelectorAll('.bf-product-card.selected').forEach(card => {
          const title = card.dataset.productTitle;
          const price = parseFloat(card.dataset.productPrice);
          total += price;
          const line = document.createElement('p');
          line.textContent = `${title} â€” ${card.dataset.productPriceDisplay}`;
          summaryItems.appendChild(line);
        });
        summaryTotalEl.textContent = 'Total: ' + total.toFixed(2);
      }

      updateStep();
    });
  </script>

  {% schema %}
  {
    "name": "Box Fitter",
    "settings": [
      { "type": "image_picker", "id": "icon_step1", "label": "Icon for Packaging" },
      { "type": "text",         "id": "text_step1", "label": "Label for Packaging", "default": "Packaging" },
      { "type": "collection",   "id": "packaging_collection", "label": "Packaging Collection" },

      { "type": "image_picker", "id": "icon_step2", "label": "Icon for Gifts" },
      { "type": "text",         "id": "text_step2", "label": "Label for Gifts", "default": "Gifts" },
      { "type": "collection",   "id": "gifts_collection", "label": "Gifts Collection" },

      { "type": "image_picker", "id": "icon_step3", "label": "Icon for Card" },
      { "type": "text",         "id": "text_step3", "label": "Label for Card", "default": "Card" },
      { "type": "collection",   "id": "card_collection", "label": "Card Collection" },

      { "type": "image_picker", "id": "icon_step4", "label": "Icon for Done" },
      { "type": "text",         "id": "text_step4", "label": "Label for Done", "default": "Done" },

      { "type": "checkbox",     "id": "step1_multiple", "label": "Allow multiple selection on Step 1" },
      { "type": "checkbox",     "id": "step2_multiple", "label": "Allow multiple selection on Step 2" },
      { "type": "checkbox",     "id": "step3_multiple", "label": "Allow multiple selection on Step 3" }
    ],
    "presets": [
      { "name": "Box Fitter" }
    ]
  }
  {% endschema %}
